0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'install' ]
2 info using npm@1.2.14
3 info using node@v0.10.0
4 verbose node symlink /usr/local/bin/node
5 verbose read json /home/vagrant/app/package.json
6 warn package.json QArt@0.0.1 No README.md file found!
7 verbose readDependencies using package.json deps
8 verbose install where, deps [ '/home/vagrant/app',
8 verbose install   [ 'express', 'jade', 'less-middleware' ] ]
9 verbose from cache /home/vagrant/app/package.json
10 info preinstall QArt@0.0.1
11 verbose read json /home/vagrant/app/node_modules/express/package.json
12 verbose read json /home/vagrant/app/node_modules/less-middleware/package.json
13 verbose from cache /home/vagrant/app/package.json
14 verbose readDependencies using package.json deps
15 verbose from cache /home/vagrant/app/node_modules/express/package.json
16 verbose from cache /home/vagrant/app/node_modules/less-middleware/package.json
17 verbose already installed skipping less-middleware@* /home/vagrant/app
18 verbose already installed skipping express@3.1.0 /home/vagrant/app
19 verbose cache add [ 'jade@*', null ]
20 verbose cache add name=undefined spec="jade@*" args=["jade@*",null]
21 verbose parsed url { protocol: null,
21 verbose parsed url   slashes: null,
21 verbose parsed url   auth: null,
21 verbose parsed url   host: null,
21 verbose parsed url   port: null,
21 verbose parsed url   hostname: null,
21 verbose parsed url   hash: null,
21 verbose parsed url   search: null,
21 verbose parsed url   query: null,
21 verbose parsed url   pathname: 'jade@*',
21 verbose parsed url   path: 'jade@*',
21 verbose parsed url   href: 'jade@*' }
22 verbose cache add name="jade" spec="*" args=["jade","*"]
23 verbose parsed url { protocol: null,
23 verbose parsed url   slashes: null,
23 verbose parsed url   auth: null,
23 verbose parsed url   host: null,
23 verbose parsed url   port: null,
23 verbose parsed url   hostname: null,
23 verbose parsed url   hash: null,
23 verbose parsed url   search: null,
23 verbose parsed url   query: null,
23 verbose parsed url   pathname: '*',
23 verbose parsed url   path: '*',
23 verbose parsed url   href: '*' }
24 verbose addNamed [ 'jade', '*' ]
25 verbose addNamed [ null, '' ]
26 silly lockFile ad03ed78-jade jade@*
27 verbose lock jade@* /home/vagrant/.npm/ad03ed78-jade.lock
28 silly addNameRange { name: 'jade', range: '', hasData: false }
29 verbose url raw jade
30 verbose url resolving [ 'https://registry.npmjs.org/', './jade' ]
31 verbose url resolved https://registry.npmjs.org/jade
32 info trying registry request attempt 1 at 18:12:18
33 verbose etag "4H9XO6014G8SDDA05TMRXEP4R"
34 http GET https://registry.npmjs.org/jade
35 http 304 https://registry.npmjs.org/jade
36 silly registry.get cb [ 304,
36 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
36 silly registry.get     etag: '"4H9XO6014G8SDDA05TMRXEP4R"',
36 silly registry.get     date: 'Fri, 22 Mar 2013 18:12:19 GMT',
36 silly registry.get     'content-length': '0' } ]
37 verbose etag jade from cache
38 silly addNameRange number 2 { name: 'jade', range: '', hasData: true }
39 silly addNameRange versions [ 'jade',
39 silly addNameRange   [ '0.0.1',
39 silly addNameRange     '0.0.2',
39 silly addNameRange     '0.1.0',
39 silly addNameRange     '0.2.0',
39 silly addNameRange     '0.2.1',
39 silly addNameRange     '0.2.2',
39 silly addNameRange     '0.2.3',
39 silly addNameRange     '0.2.4',
39 silly addNameRange     '0.3.0',
39 silly addNameRange     '0.4.0',
39 silly addNameRange     '0.4.1',
39 silly addNameRange     '0.5.0',
39 silly addNameRange     '0.5.1',
39 silly addNameRange     '0.5.2',
39 silly addNameRange     '0.5.3',
39 silly addNameRange     '0.5.4',
39 silly addNameRange     '0.5.5',
39 silly addNameRange     '0.5.6',
39 silly addNameRange     '0.5.7',
39 silly addNameRange     '0.6.0',
39 silly addNameRange     '0.6.1',
39 silly addNameRange     '0.6.3',
39 silly addNameRange     '0.7.0',
39 silly addNameRange     '0.7.1',
39 silly addNameRange     '0.8.0',
39 silly addNameRange     '0.8.1',
39 silly addNameRange     '0.8.2',
39 silly addNameRange     '0.8.3',
39 silly addNameRange     '0.8.4',
39 silly addNameRange     '0.8.5',
39 silly addNameRange     '0.8.6',
39 silly addNameRange     '0.8.7',
39 silly addNameRange     '0.8.8',
39 silly addNameRange     '0.8.9',
39 silly addNameRange     '0.9.0',
39 silly addNameRange     '0.9.1',
39 silly addNameRange     '0.9.2',
39 silly addNameRange     '0.9.3',
39 silly addNameRange     '0.10.0',
39 silly addNameRange     '0.10.1',
39 silly addNameRange     '0.10.2',
39 silly addNameRange     '0.10.3',
39 silly addNameRange     '0.10.4',
39 silly addNameRange     '0.10.5',
39 silly addNameRange     '0.10.6',
39 silly addNameRange     '0.10.7',
39 silly addNameRange     '0.11.0',
39 silly addNameRange     '0.11.1',
39 silly addNameRange     '0.12.0',
39 silly addNameRange     '0.12.1',
39 silly addNameRange     '0.12.2',
39 silly addNameRange     '0.12.3',
39 silly addNameRange     '0.12.4',
39 silly addNameRange     '0.13.0',
39 silly addNameRange     '0.14.0',
39 silly addNameRange     '0.14.1',
39 silly addNameRange     '0.14.2',
39 silly addNameRange     '0.15.0',
39 silly addNameRange     '0.15.1',
39 silly addNameRange     '0.15.2',
39 silly addNameRange     '0.15.3',
39 silly addNameRange     '0.15.4',
39 silly addNameRange     '0.16.0',
39 silly addNameRange     '0.16.1',
39 silly addNameRange     '0.16.2',
39 silly addNameRange     '0.16.3',
39 silly addNameRange     '0.16.4',
39 silly addNameRange     '0.17.0',
39 silly addNameRange     '0.18.0',
39 silly addNameRange     '0.19.0',
39 silly addNameRange     '0.20.0',
39 silly addNameRange     '0.20.1',
39 silly addNameRange     '0.20.2',
39 silly addNameRange     '0.20.3',
39 silly addNameRange     '0.21.0',
39 silly addNameRange     '0.22.0',
39 silly addNameRange     '0.22.1',
39 silly addNameRange     '0.23.0',
39 silly addNameRange     '0.24.0',
39 silly addNameRange     '0.25.0',
39 silly addNameRange     '0.26.0',
39 silly addNameRange     '0.26.1',
39 silly addNameRange     '0.26.2',
39 silly addNameRange     '0.26.3',
39 silly addNameRange     '0.27.0',
39 silly addNameRange     '0.27.1',
39 silly addNameRange     '0.27.2',
39 silly addNameRange     '0.27.3',
39 silly addNameRange     '0.27.4',
39 silly addNameRange     '0.27.5',
39 silly addNameRange     '0.27.6',
39 silly addNameRange     '0.27.7',
39 silly addNameRange     '0.28.0',
39 silly addNameRange     '0.28.1',
39 silly addNameRange     '0.28.2' ] ]
40 verbose addNamed [ 'jade', '0.28.2' ]
41 verbose addNamed [ '0.28.2', '0.28.2' ]
42 silly lockFile 4d9c5058-jade-0-28-2 jade@0.28.2
43 verbose lock jade@0.28.2 /home/vagrant/.npm/4d9c5058-jade-0-28-2.lock
44 verbose read json /home/vagrant/.npm/jade/0.28.2/package/package.json
45 silly lockFile 4d9c5058-jade-0-28-2 jade@0.28.2
46 silly lockFile 4d9c5058-jade-0-28-2 jade@0.28.2
47 silly lockFile ad03ed78-jade jade@*
48 silly lockFile ad03ed78-jade jade@*
49 silly resolved [ { name: 'jade',
49 silly resolved     description: 'Jade template engine',
49 silly resolved     version: '0.28.2',
49 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
49 silly resolved     repository: { type: 'git', url: 'git://github.com/visionmedia/jade' },
49 silly resolved     main: './index.js',
49 silly resolved     bin: { jade: './bin/jade' },
49 silly resolved     man: [ './jade.1' ],
49 silly resolved     dependencies: { commander: '0.6.1', mkdirp: '0.3.x' },
49 silly resolved     devDependencies:
49 silly resolved      { 'coffee-script': '~1.4.0',
49 silly resolved        mocha: '*',
49 silly resolved        markdown: '*',
49 silly resolved        stylus: '*',
49 silly resolved        uubench: '*',
49 silly resolved        should: '*',
49 silly resolved        less: '*',
49 silly resolved        'uglify-js': '*' },
49 silly resolved     component: { scripts: [Object] },
49 silly resolved     scripts: { test: 'mocha -R spec', prepublish: 'npm prune' },
49 silly resolved     readme: '# Jade - template engine \n[![Build Status](https://secure.travis-ci.org/visionmedia/jade.png)](http://travis-ci.org/visionmedia/jade)\n[![Dependency Status](https://gemnasium.com/visionmedia/jade.png)](https://gemnasium.com/visionmedia/jade)\n\n Jade is a high performance template engine heavily influenced by [Haml](http://haml-lang.com)\n and implemented with JavaScript for [node](http://nodejs.org). For discussion join the [Google Group](http://groups.google.com/group/jadejs).\n\n## Test drive\n\n  You can test drive Jade online [here](http://naltatis.github.com/jade-syntax-docs).\n\n## README Contents\n\n- [Features](#a1)\n- [Implementations](#a2)\n- [Installation](#a3)\n- [Browser Support](#a4)\n- [Public API](#a5)\n- [Syntax](#a6)\n    - [Line Endings](#a6-1)\n    - [Tags](#a6-2)\n    - [Tag Text](#a6-3)\n    - [Comments](#a6-4)\n    - [Block Comments](#a6-5)\n    - [Nesting](#a6-6)\n    - [Block Expansion](#a6-7)\n    - [Case](#a6-8)\n    - [Attributes](#a6-9)\n    - [HTML](#a6-10)\n    - [Doctypes](#a6-11)\n- [Filters](#a7)\n- [Code](#a8)\n- [Iteration](#a9)\n- [Conditionals](#a10)\n- [Template inheritance](#a11)\n- [Block append / prepend](#a12)\n- [Includes](#a13)\n- [Mixins](#a14)\n- [Generated Output](#a15)\n- [Example Makefile](#a16)\n- [jade(1)](#a17)\n- [Tutorials](#a18)\n- [License](#a19)\n\n<a name="a1"/>\n## Features\n\n  - client-side support\n  - great readability\n  - flexible indentation\n  - block-expansion\n  - mixins\n  - static includes\n  - attribute interpolation\n  - code is escaped by default for security\n  - contextual error reporting at compile &amp; run time\n  - executable for compiling jade templates via the command line\n  - html 5 mode (the default doctype)\n  - optional memory caching\n  - combine dynamic and static tag classes\n  - parse tree manipulation via _filters_\n  - template inheritance\n  - block append / prepend\n  - supports [Express JS](http://expressjs.com) out of the box\n  - transparent iteration over objects, arrays, and even non-enumerables via `each`\n  - block comments\n  - no tag prefix\n  - filters\n    - :stylus must have [stylus](http://github.com/LearnBoost/stylus) installed\n    - :less must have [less.js](http://github.com/cloudhead/less.js) installed\n    - :markdown must have [markdown-js](http://github.com/evilstreak/markdown-js), [node-discount](http://github.com/visionmedia/node-discount), or [marked](http://github.com/chjj/marked) installed\n    - :cdata\n    - :coffeescript must have [coffee-script](http://jashkenas.github.com/coffee-script/) installed\n  - [Emacs Mode](https://github.com/brianc/jade-mode)\n  - [Vim Syntax](https://github.com/digitaltoad/vim-jade)\n  - [TextMate Bundle](http://github.com/miksago/jade-tmbundle)\n  - [Coda/SubEtha syntax Mode](https://github.com/aaronmccall/jade.mode)\n  - [Screencasts](http://tjholowaychuk.com/post/1004255394/jade-screencast-template-engine-for-nodejs)\n  - [html2jade](https://github.com/donpark/html2jade) converter\n\n<a name="a2"/>\n## Implementations\n\n  - [php](http://github.com/everzet/jade.php)\n  - [scala](http://scalate.fusesource.org/versions/snapshot/documentation/scaml-reference.html)\n  - [ruby](http://github.com/stonean/slim)\n  - [python](https://github.com/SyrusAkbary/pyjade)\n  - [java](https://github.com/neuland/jade4j)\n\n<a name="a3"/>\n## Installation\n\nvia npm:\n\n```bash\n$ npm install jade\n```\n\n<a name="a4"/>\n## Browser Support\n\n To compile jade to a single file compatible for client-side use simply execute:\n\n```bash\n$ make jade.js\n```\n\n Alternatively, if uglifyjs is installed via npm (`npm install uglify-js`) you may execute the following which will create both files. However each release builds these for you.\n\n```bash\n$ make jade.min.js\n```\n\n  By default Jade instruments templates with line number statements such as `__.lineno = 3` for debugging purposes. When used in a browser it\'s useful to minimize this boiler plate, you can do so by passing the option `{ compileDebug: false }`. The following template\n\n```jade\np Hello #{name}\n```\n\n Can then be as small as the following generated function:\n\n```js\nfunction anonymous(locals, attrs, escape, rethrow) {\n  var buf = [];\n  with (locals || {}) {\n    var interp;\n    buf.push(\'\\n<p>Hello \' + escape((interp = name) == null ? \'\' : interp) + \'\\n</p>\');\n  }\n  return buf.join("");\n}\n```\n\n  Through the use of Jade\'s `./runtime.js` you may utilize these pre-compiled templates on the client-side _without_ Jade itself, all you need is the associated utility functions (in runtime.js), which are then available as `jade.attrs`, `jade.escape` etc. To enable this you should pass `{ client: true }` to `jade.compile()` to tell Jade to reference the helper functions\n  via `jade.attrs`, `jade.escape` etc.\n\n```js\nfunction anonymous(locals, attrs, escape, rethrow) {\n  var attrs = jade.attrs, escape = jade.escape, rethrow = jade.rethrow;\n  var buf = [];\n  with (locals || {}) {\n    var interp;\n    buf.push(\'\\n<p>Hello \' + escape((interp = name) == null ? \'\' : interp) + \'\\n</p>\');\n  }\n  return buf.join("");\n}\n```\n\n<a name="a5"/>\n## Public API\n\n```js\nvar jade = require(\'jade\');\n\n// Compile a function\nvar fn = jade.compile(\'string of jade\', options);\nfn(locals);\n```\n\n### Options\n\n - `self`      Use a `self` namespace to hold the locals _(false by default)_\n - `locals`    Local variable object\n - `filename`  Used in exceptions, and required when using includes\n - `debug`     Outputs tokens and function body generated\n - `compiler`  Compiler to replace jade\'s default\n - `compileDebug`  When `false` no debug instrumentation is compiled\n - `pretty`    Add pretty-indentation whitespace to output _(false by default)_\n\n<a name="a6"/>\n## Syntax\n\n<a name="a6-1"/>\n### Line Endings\n\n**CRLF** and **CR** are converted to **LF** before parsing.\n\n<a name="a6-2"/>\n### Tags\n\nA tag is simply a leading word:\n\n```jade\nhtml\n```\n\nfor example is converted to `<html></html>`\n\ntags can also have ids:\n\n```jade\ndiv#container\n```\n\nwhich would render `<div id="container"></div>`\n\nhow about some classes?\n\n```jade\ndiv.user-details\n```\n\nrenders `<div class="user-details"></div>`\n\nmultiple classes? _and_ an id? sure:\n\n```jade\ndiv#foo.bar.baz\n```\n\nrenders `<div id="foo" class="bar baz"></div>`\n\ndiv div div sure is annoying, how about:\n\n```jade\n#foo\n.bar\n```\n\nwhich is syntactic sugar for what we have already been doing, and outputs:\n\n```html\n<div id="foo"></div><div class="bar"></div>\n```\n\n<a name="a6-3"/>\n### Tag Text\n\nSimply place some content after the tag:\n\n```jade\np wahoo!\n```\n\nrenders `<p>wahoo!</p>`.\n\nwell cool, but how about large bodies of text:\n\n```jade\np\n  | foo bar baz\n  | rawr rawr\n  | super cool\n  | go jade go\n```\n\nrenders `<p>foo bar baz rawr.....</p>`\n\ninterpolation? yup! both types of text can utilize interpolation,\nif we passed `{ name: \'tj\', email: \'tj@vision-media.ca\' }` to the compiled function we can do the following:\n\n```jade\n#user #{name} &lt;#{email}&gt;\n```\n\noutputs `<div id="user">tj &lt;tj@vision-media.ca&gt;</div>`\n\nActually want `#{}` for some reason? escape it!\n\n```jade\np \\#{something}\n```\n\nnow we have `<p>#{something}</p>`\n\nWe can also utilize the unescaped variant `!{html}`, so the following\nwill result in a literal script tag:\n\n```jade\n- var html = "<script></script>"\n| !{html}\n```\n\nNested tags that also contain text can optionally use a text block:\n\n```jade\nlabel\n  | Username:\n  input(name=\'user[name]\')\n```\n\nor immediate tag text:\n\n```jade\nlabel Username:\n  input(name=\'user[name]\')\n```\n\nTags that accept _only_ text such as `script` and `style` do not\nneed the leading `|` character, for example:\n\n```jade\nhtml\n  head\n    title Example\n    script\n      if (foo) {\n        bar();\n      } else {\n        baz();\n      }\n```\n\nOnce again as an alternative, we may use a trailing `.` to indicate a text block, for example:\n\n```jade\np.\n  foo asdf\n  asdf\n   asdfasdfaf\n   asdf\n  asd.\n```\n\noutputs:\n\n```html\n<p>foo asdf\nasdf\n  asdfasdfaf\n  asdf\nasd.\n</p>\n```\n\nThis however differs from a trailing `.` followed by a space, which although is ignored by the Jade parser, tells Jade that this period is a literal:\n\n```jade\np .\n```\n\noutputs:\n\n```html\n<p>.</p>\n```\n\nIt should be noted that text blocks should be doubled escaped.  For example if you desire the following output.\n\n```html\n<p>foo\\bar</p>\n```\n\nuse:\n\n```jade\np.\n  foo\\\\bar\n```\n\n<a name="a6-4"/>\n### Comments\n\nSingle line comments currently look the same as JavaScript comments,\naka `//` and must be placed on their own line:\n\n```jade\n// just some paragraphs\np foo\np bar\n```\n\nwould output\n\n```html\n<!-- just some paragraphs -->\n<p>foo</p>\n<p>bar</p>\n```\n\nJade also supports unbuffered comments, by simply adding a hyphen:\n\n```jade\n//- will not output within markup\np foo\np bar\n```\n\noutputting\n\n```html\n<p>foo</p>\n<p>bar</p>\n```\n\n<a name="a6-5"/>\n### Block Comments\n\n A block comment is legal as well:\n\n```jade\nbody\n  //\n    #content\n      h1 Example\n```\n\noutputting\n\n```html\n<body>\n  <!--\n  <div id="content">\n    <h1>Example</h1>\n  </div>\n  -->\n</body>\n```\n\nJade supports conditional-comments as well, for example:\n\n```jade\nhead\n  //if lt IE 8\n    script(src=\'/ie-sucks.js\')\n```\n\noutputs:\n\n```html\n<head>\n  <!--[if lt IE 8]>\n    <script src="/ie-sucks.js"></script>\n  <![endif]-->\n</head>\n```\n\n<a name="a6-6"/>\n### Nesting\n\n Jade supports nesting to define the tags in a natural way:\n\n```jade\nul\n  li.first\n    a(href=\'#\') foo\n  li\n    a(href=\'#\') bar\n  li.last\n    a(href=\'#\') baz\n```\n\n<a name="a6-7"/>\n### Block Expansion\n\n Block expansion allows you to create terse single-line nested tags,\n the following example is equivalent to the nesting example above.\n\n```jade\nul\n  li.first: a(href=\'#\') foo\n  li: a(href=\'#\') bar\n  li.last: a(href=\'#\') baz\n```\n\n<a name="a6-8"/>\n### Case\n\n The case statement takes the following form:\n\n```jade\nhtml\n  body\n    friends = 10\n    case friends\n      when 0\n        p you have no friends\n      when 1\n        p you have a friend\n      default\n        p you have #{friends} friends\n```\n\n Block expansion may also be used:\n\n```jade\nfriends = 5\n\nhtml\n  body\n    case friends\n      when 0: p you have no friends\n      when 1: p you have a friend\n      default: p you have #{friends} friends\n```\n\n<a name="a6-9"/>\n### Attributes\n\nJade currently supports `(` and `)` as attribute delimiters.\n\n```jade\na(href=\'/login\', title=\'View login page\') Login\n```\n\nWhen a value is `undefined` or `null` the attribute is _not_ added,\nso this is fine, it will not compile `something="null"`.\n\n```jade\ndiv(something=null)\n```\n\nBoolean attributes are also supported:\n\n```jade\ninput(type="checkbox", checked)\n```\n\nBoolean attributes with code will only output the attribute when `true`:\n\n```jade\ninput(type="checkbox", checked=someValue)\n```\n\nMultiple lines work too:\n\n```jade\ninput(type=\'checkbox\',\n  name=\'agreement\',\n  checked)\n```\n\nMultiple lines without the comma work fine:\n\n```jade\ninput(type=\'checkbox\'\n  name=\'agreement\'\n  checked)\n```\n\nFunky whitespace? fine:\n\n```jade\ninput(\n  type=\'checkbox\'\n  name=\'agreement\'\n  checked)\n```\n\nColons work:\n\n```jade\nrss(xmlns:atom="atom")\n```\n\nSuppose we have the `user` local `{ id: 12, name: \'tobi\' }`\nand we wish to create an anchor tag with `href` pointing to "/user/12"\nwe could use regular javascript concatenation:\n\n```jade\na(href=\'/user/\' + user.id)= user.name\n```\n\nor we could use jade\'s interpolation, which I added because everyone\nusing Ruby or CoffeeScript seems to think this is legal js..:\n\n```jade\na(href=\'/user/#{user.id}\')= user.name\n```\n\nThe `class` attribute is special-cased when an array is given,\nallowing you to pass an array such as `bodyClasses = [\'user\', \'authenticated\']` directly:\n\n```jade\nbody(class=bodyClasses)\n```\n\n<a name="a6-10"/>\n### HTML\n\n Inline html is fine, we can use the pipe syntax to\n write arbitrary text, in this case some html:\n\n```jade\nhtml\n  body\n    | <h1>Title</h1>\n    | <p>foo bar baz</p>\n```\n\n Or we can use the trailing `.` to indicate to Jade that we\n only want text in this block, allowing us to omit the pipes:\n\n```jade\nhtml\n  body.\n    <h1>Title</h1>\n    <p>foo bar baz</p>\n```\n\n Both of these examples yield the same result:\n\n```html\n<html><body><h1>Title</h1>\n<p>foo bar baz</p>\n</body></html>\n```\n\n The same rule applies for anywhere you can have text\n in jade, raw html is fine:\n\n```jade\nhtml\n  body\n    h1 User <em>#{name}</em>\n```\n\n<a name="a6-11"/>\n### Doctypes\n\nTo add a doctype simply use `!!!`, or `doctype` followed by an optional value:\n\n```jade\n!!!\n```\n\nor\n\n```jade\ndoctype\n```\n\nWill output the _html 5_  doctype, however:\n\n```jade\n!!! transitional\n```\n\nWill output the _transitional_ doctype.\n\nDoctypes are case-insensitive, so the following are equivalent:\n\n```jade\ndoctype Basic\ndoctype basic\n```\n\nit\'s also possible to simply pass a doctype literal:\n\n```jade\ndoctype html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN\n```\n\nyielding:\n\n```html\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN>\n```\n\nBelow are the doctypes defined by default, which can easily be extended:\n\n```js\nvar doctypes = exports.doctypes = {\n  \'5\': \'<!DOCTYPE html>\',\n  \'default\': \'<!DOCTYPE html>\',\n  \'xml\': \'<?xml version="1.0" encoding="utf-8" ?>\',\n  \'transitional\': \'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\',\n  \'strict\': \'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\',\n  \'frameset\': \'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">\',\n  \'1.1\': \'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">\',\n  \'basic\': \'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">\',\n  \'mobile\': \'<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">\'\n};\n```\n\nTo alter the default simply change:\n\n```js\njade.doctypes.default = \'whatever you want\';\n```\n\n<a name="a7"/>\n## Filters\n\nFilters are prefixed with `:`, for example `:markdown` and\npass the following block of text to an arbitrary function for processing. View the _features_\nat the top of this document for available filters.\n\n```jade\nbody\n  :markdown\n    Woah! jade _and_ markdown, very **cool**\n    we can even link to [stuff](http://google.com)\n```\n\nRenders:\n\n```html\n<body><p>Woah! jade <em>and</em> markdown, very <strong>cool</strong> we can even link to <a href="http://google.com">stuff</a></p></body>\n```\n\n<a name="a8"/>\n## Code\n\nJade currently supports three classifications of executable code. The first\nis prefixed by `-`, and is not buffered:\n\n```jade\n- var foo = \'bar\';\n```\n\nThis can be used for conditionals, or iteration:\n\n```jade\n- for (var key in obj)\n  p= obj[key]\n```\n\nDue to Jade\'s buffering techniques the following is valid as well:\n\n```jade\n- if (foo)\n  ul\n    li yay\n    li foo\n    li worked\n- else\n  p oh no! didnt work\n```\n\nHell, even verbose iteration:\n\n```jade\n- if (items.length)\n  ul\n    - items.forEach(function(item){\n      li= item\n    - })\n```\n\nAnything you want!\n\nNext up we have _escaped_ buffered code, which is used to\nbuffer a return value, which is prefixed by `=`:\n\n```jade\n- var foo = \'bar\'\n= foo\nh1= foo\n```\n\nWhich outputs `bar<h1>bar</h1>`. Code buffered by `=` is escaped\nby default for security, however to output unescaped return values\nyou may use `!=`:\n\n```jade\np!= aVarContainingMoreHTML\n```\n\n Jade also has designer-friendly variants, making the literal JavaScript\n more expressive and declarative. For example the following assignments\n are equivalent, and the expression is still regular javascript:\n\n```jade\n- var foo = \'foo \' + \'bar\'\nfoo = \'foo \' + \'bar\'\n```\n\n  Likewise Jade has first-class `if`, `else if`, `else`, `until`, `while`, `unless` among others, however you must remember that the expressions are still regular javascript:\n\n```jade\nif foo == \'bar\'\n  ul\n    li yay\n    li foo\n    li worked\nelse\n  p oh no! didnt work\n```\n\n<a name="a9"/>\n## Iteration\n\n Along with vanilla JavaScript Jade also supports a subset of\n constructs that allow you to create more designer-friendly templates,\n one of these constructs is `each`, taking the form:\n\n```jade\neach VAL[, KEY] in OBJ\n```\n\nAn example iterating over an array:\n\n```jade\n- var items = ["one", "two", "three"]\neach item in items\n  li= item\n```\n\noutputs:\n\n```html\n<li>one</li>\n<li>two</li>\n<li>three</li>\n```\n\niterating an array with index:\n\n```jade\nitems = ["one", "two", "three"]\neach item, i in items\n  li #{item}: #{i}\n```\n\noutputs:\n\n```html\n<li>one: 0</li>\n<li>two: 1</li>\n<li>three: 2</li>\n```\n\niterating an object\'s keys and values:\n\n```jade\nobj = { foo: \'bar\' }\neach val, key in obj\n  li #{key}: #{val}\n```\n\nwould output `<li>foo: bar</li>`\n\nInternally Jade converts these statements to regular\nJavaScript loops such as `users.forEach(function(user){`,\nso lexical scope and nesting applies as it would with regular\nJavaScript:\n\n```jade\neach user in users\n  each role in user.roles\n    li= role\n```\n\n You may also use `for` if you prefer:\n\n```jade\nfor user in users\n  for role in user.roles\n    li= role\n```\n\n<a name="a10"/>\n## Conditionals\n\n Jade conditionals are equivalent to those using the code (`-`) prefix,\n however allow you to ditch parenthesis to become more designer friendly,\n however keep in mind the expression given is _regular_ JavaScript:\n\n```jade\nfor user in users\n  if user.role == \'admin\'\n    p #{user.name} is an admin\n  else\n    p= user.name\n```\n\n is equivalent to the following using vanilla JavaScript literals:\n\n```jade\nfor user in users\n  - if (user.role == \'admin\')\n    p #{user.name} is an admin\n  - else\n    p= user.name\n```\n\n  Jade also provides `unless` which is equivalent to `if (!(expr))`:\n\n```jade\nfor user in users\n  unless user.isAnonymous\n    p\n      | Click to view\n      a(href=\'/users/\' + user.id)= user.name\n```\n\n<a name="a11"/>\n## Template inheritance\n\n  Jade supports template inheritance via the `block` and `extends` keywords. A block is simply a "block" of Jade that may be replaced within a child template, this process is recursive. To activate template inheritance in Express 2.x you must add: `app.set(\'view options\', { layout: false });`.\n\n  Jade blocks can provide default content if desired, however optional as shown below by `block scripts`, `block content`, and `block foot`.\n\n```jade\nhtml\n  head\n    h1 My Site - #{title}\n    block scripts\n      script(src=\'/jquery.js\')\n  body\n    block content\n    block foot\n      #footer\n        p some footer content\n```\n\n  Now to extend the layout, simply create a new file and use the `extends` directive as shown below, giving the path (with or without the .jade extension). You may now define one or more blocks that will override the parent block content, note that here the `foot` block is _not_ redefined and will output "some footer content".\n\n```jade\nextends layout\n\nblock scripts\n  script(src=\'/jquery.js\')\n  script(src=\'/pets.js\')\n\nblock content\n  h1= title\n  each pet in pets\n    include pet\n```\n\n  It\'s also possible to override a block to provide additional blocks, as shown in the following example where `content` now exposes a `sidebar` and `primary` block for overriding, or the child template could override `content` all together.\n\n```jade\nextends regular-layout\n\nblock content\n  .sidebar\n    block sidebar\n      p nothing\n  .primary\n    block primary\n      p nothing\n```\n\n<a name="a12"/>\n## Block append / prepend\n\n Jade allows you to _replace_ (default), _prepend_, or _append_ blocks. Suppose for example you have default scripts in a "head" block that you wish to utilize on _every_ page, you might do this:\n\n```jade\nhtml\n  head\n    block head\n      script(src=\'/vendor/jquery.js\')\n      script(src=\'/vendor/caustic.js\')\n    body\n      block content\n```\n\n Now suppose you have a page of your application for a JavaScript game, you want some game related scripts as well as these defaults, you can simply `append` the block:\n\n```jade\nextends layout\n\nblock append head\n  script(src=\'/vendor/three.js\')\n  script(src=\'/game.js\')\n```\n\n  When using `block append` or `block prepend` the `block` is optional:\n\n```jade\nextends layout\n\nappend head\n  script(src=\'/vendor/three.js\')\n  script(src=\'/game.js\')\n```\n\n<a name="a13"/>\n## Includes\n\n Includes allow you to statically include chunks of Jade,\n or other content like css, or html which lives in separate files. The classical example is including a header and footer. Suppose we have the following directory structure:\n\n    ./layout.jade\n    ./includes/\n      ./head.jade\n      ./foot.jade\n\nand the following _layout.jade_:\n\n```jade\nhtml\n  include includes/head\n  body\n    h1 My Site\n    p Welcome to my super amazing site.\n    include includes/foot\n```\n\nboth includes _includes/head_ and _includes/foot_ are\nread relative to the `filename` option given to _layout.jade_,\nwhich should be an absolute path to this file, however Express does this for you. Include then parses these files, and injects the AST produced to render what you would expect:\n\n```html\n<html>\n  <head>\n    <title>My Site</title>\n    <script src="/javascripts/jquery.js">\n    </script><script src="/javascripts/app.js"></script>\n  </head>\n  <body>\n    <h1>My Site</h1>\n    <p>Welcome to my super lame site.</p>\n    <div id="footer">\n      <p>Copyright>(c) foobar</p>\n    </div>\n  </body>\n</html>\n```\n\n As mentioned `include` can be used to include other content\n such as html or css. By providing an extension Jade will not\n assume that the file is Jade source and will include it as\n a literal:\n\n```jade\nhtml\n  body\n    include content.html\n```\n\n  Include directives may also accept a block, in which case the\n  the given block will be appended to the _last_ block defined\n  in the file. For example if `head.jade` contains:\n\n```jade\nhead\n  script(src=\'/jquery.js\')\n```\n\n We may append values by providing a block to `include head`\n as shown below, adding the two scripts.\n\n```jade\nhtml\n  include head\n    script(src=\'/foo.js\')\n    script(src=\'/bar.js\')\n  body\n    h1 test\n```\n\n You may also `yield` within an included template, allowing you to explicitly mark where the block given to `include` will be placed. Suppose for example you wish to prepend scripts rather than append, you might do the following:\n\n```jade\nhead\n  yield\n  script(src=\'/jquery.js\')\n  script(src=\'/jquery.ui.js\')\n```\n\n Since included Jade is parsed and literally merges the AST, lexically scoped variables function as if the included Jade was written right in the same file. This means `include` may be used as sort of partial, for example suppose we have `user.jade` which utilizes a `user` variable.\n\n```jade\nh1= user.name\np= user.occupation\n```\n\nWe could then simply `include user` while iterating users, and since the `user` variable is already defined within the loop the included template will have access to it.\n\n```jade\nusers = [{ name: \'Tobi\', occupation: \'Ferret\' }]\n\neach user in users\n  .user\n    include user\n```\n\nyielding:\n\n```html\n<div class="user">\n  <h1>Tobi</h1>\n  <p>Ferret</p>\n</div>\n```\n\nIf we wanted to expose a different variable name as `user` since `user.jade` references that name, we could simply define a new variable as shown here with `user = person`:\n\n```jade\neach person in users\n  .user\n    user = person\n    include user\n```\n\n<a name="a14"/>\n## Mixins\n\n Mixins are converted to regular JavaScript functions in\n the compiled template that Jade constructs. Mixins may\n take arguments, though not required:\n\n```jade\nmixin list\n  ul\n    li foo\n    li bar\n    li baz\n```\n\n  Utilizing a mixin without args looks similar, just without a block:\n\n```jade\nh2 Groceries\nmixin list\n```\n\n  Mixins may take one or more arguments as well, the arguments\n  are regular javascripts expressions, so for example the following:\n\n```jade\nmixin pets(pets)\n  ul.pets\n    - each pet in pets\n      li= pet\n\nmixin profile(user)\n  .user\n    h2= user.name\n    mixin pets(user.pets)\n```\n\n   Would yield something similar to the following html:\n\n```html\n<div class="user">\n  <h2>tj</h2>\n  <ul class="pets">\n    <li>tobi</li>\n    <li>loki</li>\n    <li>jane</li>\n    <li>manny</li>\n  </ul>\n</div>\n```\n\n<a name="a15"/>\n## Generated Output\n\n Suppose we have the following Jade:\n\n```jade\n- var title = \'yay\'\nh1.title #{title}\np Just an example\n```\n\n When the `compileDebug` option is not explicitly `false`, Jade\n will compile the function instrumented with `__.lineno = n;`, which\n in the event of an exception is passed to `rethrow()` which constructs\n a useful message relative to the initial Jade input.\n\n```js\nfunction anonymous(locals) {\n  var __ = { lineno: 1, input: "- var title = \'yay\'\\nh1.title #{title}\\np Just an example", filename: "testing/test.js" };\n  var rethrow = jade.rethrow;\n  try {\n    var attrs = jade.attrs, escape = jade.escape;\n    var buf = [];\n    with (locals || {}) {\n      var interp;\n      __.lineno = 1;\n       var title = \'yay\'\n      __.lineno = 2;\n      buf.push(\'<h1\');\n      buf.push(attrs({ "class": (\'title\') }));\n      buf.push(\'>\');\n      buf.push(\'\' + escape((interp = title) == null ? \'\' : interp) + \'\');\n      buf.push(\'</h1>\');\n      __.lineno = 3;\n      buf.push(\'<p>\');\n      buf.push(\'Just an example\');\n      buf.push(\'</p>\');\n    }\n    return buf.join("");\n  } catch (err) {\n    rethrow(err, __.input, __.filename, __.lineno);\n  }\n}\n```\n\nWhen the `compileDebug` option _is_ explicitly `false`, this instrumentation\nis stripped, which is very helpful for light-weight client-side templates. Combining Jade\'s options with the `./runtime.js` file in this repo allows you\nto toString() compiled templates and avoid running the entire Jade library on\nthe client, increasing performance, and decreasing the amount of JavaScript\nrequired.\n\n```js\nfunction anonymous(locals) {\n  var attrs = jade.attrs, escape = jade.escape;\n  var buf = [];\n  with (locals || {}) {\n    var interp;\n    var title = \'yay\'\n    buf.push(\'<h1\');\n    buf.push(attrs({ "class": (\'title\') }));\n    buf.push(\'>\');\n    buf.push(\'\' + escape((interp = title) == null ? \'\' : interp) + \'\');\n    buf.push(\'</h1>\');\n    buf.push(\'<p>\');\n    buf.push(\'Just an example\');\n    buf.push(\'</p>\');\n  }\n  return buf.join("");\n}\n```\n\n<a name="a16"/>\n## Example Makefile\n\n  Below is an example Makefile used to compile _pages/*.jade_\n  into _pages/*.html_ files by simply executing `make`.\n\n_Note:_ If you try to run this snippet and `make` throws a `missing separator` error, you should make sure all indented lines use a tab for indentation instead of spaces. (For whatever reason, GitHub renders this code snippet with 4-space indentation although the actual README file uses tabs in this snippet.)\n\n```make\nJADE = $(shell find . -wholename \'./pages/*.jade\')\nHTML = $(JADE:.jade=.html)\n\nall: $(HTML)\n\n%.html: %.jade\n\tjade < $< --path $< > $@\n\nclean:\n\trm -f $(HTML)\n\n.PHONY: clean\n```\n\nthis can be combined with the `watch(1)` command to produce\na watcher-like behaviour:\n\n```bash\n$ watch make\n```\n\n<a name="a17"/>\n## jade(1)\n\n```\n\nUsage: jade [options] [dir|file ...]\n\nOptions:\n\n  -h, --help         output usage information\n  -V, --version      output the version number\n  -o, --obj <str>    javascript options object\n  -O, --out <dir>    output the compiled html to <dir>\n  -p, --path <path>  filename used to resolve includes\n  -P, --pretty       compile pretty html output\n  -c, --client       compile for client-side runtime.js\n  -D, --no-debug     compile without debugging (smaller functions)\n\nExamples:\n\n  # translate jade the templates dir\n  $ jade templates\n\n  # create {foo,bar}.html\n  $ jade {foo,bar}.jade\n\n  # jade over stdio\n  $ jade < my.jade > my.html\n\n  # jade over stdio\n  $ echo "h1 Jade!" | jade\n\n  # foo, bar dirs rendering to /tmp\n  $ jade foo bar --out /tmp\n\n```\n\n<a name="a18"/>\n## Tutorials\n\n  - cssdeck interactive [Jade syntax tutorial](http://cssdeck.com/labs/learning-the-jade-templating-engine-syntax)\n  - cssdeck interactive [Jade logic tutorial](http://cssdeck.com/labs/jade-templating-tutorial-codecast-part-2)\n  - in [Japanese](http://blog.craftgear.net/4f501e97c1347ec934000001/title/10%E5%88%86%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8Bjade%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3)\n\n<a name="a19"/>\n## License\n\n(The MIT License)\n\nCopyright (c) 2009-2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
49 silly resolved     readmeFilename: 'Readme.md',
49 silly resolved     _id: 'jade@0.28.2',
49 silly resolved     _from: 'jade@*' } ]
50 info install jade@0.28.2 into /home/vagrant/app
51 info installOne jade@0.28.2
52 verbose from cache /home/vagrant/.npm/jade/0.28.2/package/package.json
53 info /home/vagrant/app/node_modules/jade unbuild
54 verbose read json /home/vagrant/app/node_modules/jade/package.json
55 verbose tar unpack /home/vagrant/.npm/jade/0.28.2/package.tgz
56 silly lockFile 7d1f12ce-me-vagrant-app-node-modules-jade /home/vagrant/app/node_modules/jade
57 verbose lock /home/vagrant/app/node_modules/jade /home/vagrant/.npm/7d1f12ce-me-vagrant-app-node-modules-jade.lock
58 silly lockFile ceeddab7-rant-npm-jade-0-28-2-package-tgz /home/vagrant/.npm/jade/0.28.2/package.tgz
59 verbose lock /home/vagrant/.npm/jade/0.28.2/package.tgz /home/vagrant/.npm/ceeddab7-rant-npm-jade-0-28-2-package-tgz.lock
60 silly gunzTarPerm modes [ '755', '644' ]
61 silly gunzTarPerm extractEntry package.json
62 silly gunzTarPerm extractEntry .npmignore
63 silly gunzTarPerm extractEntry LICENSE
64 silly gunzTarPerm extractEntry index.js
65 silly gunzTarPerm extractEntry jade.js
66 silly gunzTarPerm extractEntry jade.min.js
67 silly gunzTarPerm extractEntry runtime.js
68 silly gunzTarPerm extractEntry runtime.min.js
69 silly gunzTarPerm extractEntry bin/jade
70 silly gunzTarPerm extractEntry lib/compiler.js
71 silly gunzTarPerm extractEntry lib/filters.js
72 silly gunzTarPerm extractEntry lib/inline-tags.js
73 silly gunzTarPerm extractEntry lib/jade.js
74 silly gunzTarPerm extractEntry lib/doctypes.js
75 silly gunzTarPerm extractEntry lib/self-closing.js
76 silly gunzTarPerm extractEntry lib/parser.js
77 silly gunzTarPerm extractEntry lib/runtime.js
78 silly gunzTarPerm extractEntry lib/utils.js
79 silly gunzTarPerm extractEntry lib/lexer.js
80 silly gunzTarPerm extractEntry lib/nodes/attrs.js
81 silly gunzTarPerm extractEntry lib/nodes/code.js
82 silly gunzTarPerm extractEntry lib/nodes/comment.js
83 silly gunzTarPerm extractEntry lib/nodes/doctype.js
84 silly gunzTarPerm extractEntry lib/nodes/case.js
85 silly gunzTarPerm extractEntry lib/nodes/filter.js
86 silly gunzTarPerm extractEntry lib/nodes/index.js
87 silly gunzTarPerm extractEntry lib/nodes/literal.js
88 silly gunzTarPerm extractEntry lib/nodes/mixin.js
89 silly gunzTarPerm extractEntry lib/nodes/node.js
90 silly gunzTarPerm extractEntry lib/nodes/block.js
91 silly gunzTarPerm extractEntry lib/nodes/tag.js
92 silly gunzTarPerm extractEntry lib/nodes/block-comment.js
93 silly gunzTarPerm extractEntry lib/nodes/text.js
94 silly gunzTarPerm extractEntry lib/nodes/each.js
95 silly gunzTarPerm extractEntry testing/some.js
96 silly gunzTarPerm extractEntry testing/index.html
97 silly gunzTarPerm extractEntry testing/index.jade
98 silly gunzTarPerm extractEntry testing/layout.html
99 silly gunzTarPerm extractEntry testing/layout.jade
100 silly gunzTarPerm extractEntry testing/mobile.html
101 silly gunzTarPerm extractEntry testing/mobile.jade
102 silly gunzTarPerm extractEntry testing/nested/something.html
103 silly gunzTarPerm extractEntry testing/nested/something.jade
104 silly gunzTarPerm extractEntry testing/test.md
105 silly gunzTarPerm extractEntry Readme.md
106 silly gunzTarPerm extractEntry Readme_zh-cn.md
107 silly gunzTarPerm extractEntry jade.md
108 verbose read json /home/vagrant/app/node_modules/jade/package.json
109 silly lockFile 7d1f12ce-me-vagrant-app-node-modules-jade /home/vagrant/app/node_modules/jade
110 silly lockFile 7d1f12ce-me-vagrant-app-node-modules-jade /home/vagrant/app/node_modules/jade
111 silly lockFile ceeddab7-rant-npm-jade-0-28-2-package-tgz /home/vagrant/.npm/jade/0.28.2/package.tgz
112 silly lockFile ceeddab7-rant-npm-jade-0-28-2-package-tgz /home/vagrant/.npm/jade/0.28.2/package.tgz
113 info preinstall jade@0.28.2
114 verbose from cache /home/vagrant/app/node_modules/jade/package.json
115 verbose readDependencies using package.json deps
116 verbose from cache /home/vagrant/app/node_modules/jade/package.json
117 verbose readDependencies using package.json deps
118 verbose cache add [ 'commander@0.6.1', null ]
119 verbose cache add name=undefined spec="commander@0.6.1" args=["commander@0.6.1",null]
120 verbose parsed url { protocol: null,
120 verbose parsed url   slashes: null,
120 verbose parsed url   auth: null,
120 verbose parsed url   host: null,
120 verbose parsed url   port: null,
120 verbose parsed url   hostname: null,
120 verbose parsed url   hash: null,
120 verbose parsed url   search: null,
120 verbose parsed url   query: null,
120 verbose parsed url   pathname: 'commander@0.6.1',
120 verbose parsed url   path: 'commander@0.6.1',
120 verbose parsed url   href: 'commander@0.6.1' }
121 verbose cache add name="commander" spec="0.6.1" args=["commander","0.6.1"]
122 verbose parsed url { protocol: null,
122 verbose parsed url   slashes: null,
122 verbose parsed url   auth: null,
122 verbose parsed url   host: null,
122 verbose parsed url   port: null,
122 verbose parsed url   hostname: null,
122 verbose parsed url   hash: null,
122 verbose parsed url   search: null,
122 verbose parsed url   query: null,
122 verbose parsed url   pathname: '0.6.1',
122 verbose parsed url   path: '0.6.1',
122 verbose parsed url   href: '0.6.1' }
123 verbose addNamed [ 'commander', '0.6.1' ]
124 verbose addNamed [ '0.6.1', '0.6.1' ]
125 silly lockFile fa16a2ce-commander-0-6-1 commander@0.6.1
126 verbose lock commander@0.6.1 /home/vagrant/.npm/fa16a2ce-commander-0-6-1.lock
127 verbose cache add [ 'mkdirp@0.3.x', null ]
128 verbose cache add name=undefined spec="mkdirp@0.3.x" args=["mkdirp@0.3.x",null]
129 verbose parsed url { protocol: null,
129 verbose parsed url   slashes: null,
129 verbose parsed url   auth: null,
129 verbose parsed url   host: null,
129 verbose parsed url   port: null,
129 verbose parsed url   hostname: null,
129 verbose parsed url   hash: null,
129 verbose parsed url   search: null,
129 verbose parsed url   query: null,
129 verbose parsed url   pathname: 'mkdirp@0.3.x',
129 verbose parsed url   path: 'mkdirp@0.3.x',
129 verbose parsed url   href: 'mkdirp@0.3.x' }
130 verbose cache add name="mkdirp" spec="0.3.x" args=["mkdirp","0.3.x"]
131 verbose parsed url { protocol: null,
131 verbose parsed url   slashes: null,
131 verbose parsed url   auth: null,
131 verbose parsed url   host: null,
131 verbose parsed url   port: null,
131 verbose parsed url   hostname: null,
131 verbose parsed url   hash: null,
131 verbose parsed url   search: null,
131 verbose parsed url   query: null,
131 verbose parsed url   pathname: '0.3.x',
131 verbose parsed url   path: '0.3.x',
131 verbose parsed url   href: '0.3.x' }
132 verbose addNamed [ 'mkdirp', '0.3.x' ]
133 verbose addNamed [ null, '>=0.3.0- <0.4.0-' ]
134 silly lockFile 6d3723ce-mkdirp-0-3-x mkdirp@0.3.x
135 verbose lock mkdirp@0.3.x /home/vagrant/.npm/6d3723ce-mkdirp-0-3-x.lock
136 silly addNameRange { name: 'mkdirp', range: '>=0.3.0- <0.4.0-', hasData: false }
137 verbose url raw commander/0.6.1
138 verbose url resolving [ 'https://registry.npmjs.org/', './commander/0.6.1' ]
139 verbose url resolved https://registry.npmjs.org/commander/0.6.1
140 info trying registry request attempt 1 at 18:12:20
141 verbose etag "92B26UK3KU9CS5A9L6F08O5SN"
142 http GET https://registry.npmjs.org/commander/0.6.1
143 verbose url raw mkdirp
144 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
145 verbose url resolved https://registry.npmjs.org/mkdirp
146 info trying registry request attempt 1 at 18:12:20
147 verbose etag "50BWXZ1ETDBRFA1J08NDPSJTE"
148 http GET https://registry.npmjs.org/mkdirp
149 http 304 https://registry.npmjs.org/mkdirp
150 silly registry.get cb [ 304,
150 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
150 silly registry.get     etag: '"50BWXZ1ETDBRFA1J08NDPSJTE"',
150 silly registry.get     date: 'Fri, 22 Mar 2013 18:12:20 GMT',
150 silly registry.get     'content-length': '0' } ]
151 verbose etag mkdirp from cache
152 http 304 https://registry.npmjs.org/commander/0.6.1
153 silly registry.get cb [ 304,
153 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
153 silly registry.get     etag: '"92B26UK3KU9CS5A9L6F08O5SN"',
153 silly registry.get     date: 'Fri, 22 Mar 2013 18:12:20 GMT',
153 silly registry.get     'content-length': '0' } ]
154 verbose etag commander/0.6.1 from cache
155 silly addNameRange number 2 { name: 'mkdirp', range: '>=0.3.0- <0.4.0-', hasData: true }
156 silly addNameRange versions [ 'mkdirp',
156 silly addNameRange   [ '0.0.1',
156 silly addNameRange     '0.0.2',
156 silly addNameRange     '0.0.3',
156 silly addNameRange     '0.0.4',
156 silly addNameRange     '0.0.5',
156 silly addNameRange     '0.0.6',
156 silly addNameRange     '0.0.7',
156 silly addNameRange     '0.1.0',
156 silly addNameRange     '0.2.0',
156 silly addNameRange     '0.2.1',
156 silly addNameRange     '0.2.2',
156 silly addNameRange     '0.3.0',
156 silly addNameRange     '0.3.1',
156 silly addNameRange     '0.3.2',
156 silly addNameRange     '0.3.3',
156 silly addNameRange     '0.3.4',
156 silly addNameRange     '0.3.5' ] ]
157 verbose addNamed [ 'mkdirp', '0.3.5' ]
158 verbose addNamed [ '0.3.5', '0.3.5' ]
159 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
160 verbose lock mkdirp@0.3.5 /home/vagrant/.npm/67d2df2a-mkdirp-0-3-5.lock
161 verbose read json /home/vagrant/.npm/commander/0.6.1/package/package.json
162 verbose read json /home/vagrant/.npm/mkdirp/0.3.5/package/package.json
163 silly lockFile fa16a2ce-commander-0-6-1 commander@0.6.1
164 silly lockFile fa16a2ce-commander-0-6-1 commander@0.6.1
165 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
166 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
167 silly lockFile 6d3723ce-mkdirp-0-3-x mkdirp@0.3.x
168 silly lockFile 6d3723ce-mkdirp-0-3-x mkdirp@0.3.x
169 silly resolved [ { name: 'commander',
169 silly resolved     version: '0.6.1',
169 silly resolved     description: 'the complete solution for node.js command-line programs',
169 silly resolved     keywords: [ 'command', 'option', 'parser', 'prompt', 'stdin' ],
169 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
169 silly resolved     repository:
169 silly resolved      { type: 'git',
169 silly resolved        url: 'https://github.com/visionmedia/commander.js.git' },
169 silly resolved     dependencies: {},
169 silly resolved     devDependencies: { should: '>= 0.0.1' },
169 silly resolved     scripts: { test: 'make test' },
169 silly resolved     main: 'index',
169 silly resolved     engines: { node: '>= 0.4.x' },
169 silly resolved     readme: '# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby\'s [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.0.1\')\n  .option(\'-p, --peppers\', \'Add peppers\')\n  .option(\'-P, --pineapple\', \'Add pineapple\')\n  .option(\'-b, --bbq\', \'Add bbq sauce\')\n  .option(\'-c, --cheese [type]\', \'Add the specified type of cheese [marble]\', \'marble\')\n  .parse(process.argv);\n\nconsole.log(\'you ordered a pizza with:\');\nif (program.peppers) console.log(\'  - peppers\');\nif (program.pineapple) console.log(\'  - pineappe\');\nif (program.bbq) console.log(\'  - bbq\');\nconsole.log(\'  - %s cheese\', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as "--template-engine" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split(\'..\').map(Number);\n}\n\nfunction list(val) {\n  return val.split(\',\');\n}\n\nprogram\n  .version(\'0.0.1\')\n  .usage(\'[options] <file ...>\')\n  .option(\'-i, --integer <n>\', \'An integer argument\', parseInt)\n  .option(\'-f, --float <n>\', \'A float argument\', parseFloat)\n  .option(\'-r, --range <a>..<b>\', \'A range\', range)\n  .option(\'-l, --list <items>\', \'A list\', list)\n  .option(\'-o, --optional [value]\', \'An optional value\')\n  .parse(process.argv);\n\nconsole.log(\' int: %j\', program.integer);\nconsole.log(\' float: %j\', program.float);\nconsole.log(\' optional: %j\', program.optional);\nprogram.range = program.range || [];\nconsole.log(\' range: %j..%j\', program.range[0], program.range[1]);\nconsole.log(\' list: %j\', program.list);\nconsole.log(\' args: %j\', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for "--help". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable "stuff" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'../\');\n\nfunction list(val) {\n  return val.split(\',\').map(Number);\n}\n\nprogram\n  .version(\'0.0.1\')\n  .option(\'-f, --foo\', \'enable some foo\')\n  .option(\'-b, --bar\', \'enable some bar\')\n  .option(\'-B, --baz\', \'enable some baz\');\n\n// must be before .parse() since\n// node\'s emit() is immediate\n\nprogram.on(\'--help\', function(){\n  console.log(\'  Examples:\');\n  console.log(\'\');\n  console.log(\'    $ custom-help --help\');\n  console.log(\'    $ custom-help -h\');\n  console.log(\'\');\n});\n\nprogram.parse(process.argv);\n\nconsole.log(\'stuff\');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt(\'name: \', function(name){\n  console.log(\'hi %s\', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt(\'description:\', function(name){\n  console.log(\'hi %s\', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt(\'Age: \', Number, function(age){\n  console.log(\'age: %j\', age);\n});\n```\n\n```js\nprogram.prompt(\'Birthdate: \', Date, function(date){\n  console.log(\'date: %s\', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password(\'Password: \', function(pass){\n  console.log(\'got "%s"\', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char "*":\n\n```js\nprogram.password(\'Password: \', \'*\', function(pass){\n  console.log(\'got "%s"\', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm(\'continue? \', function(ok){\n  console.log(\' got %j\', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = [\'tobi\', \'loki\', \'jane\', \'manny\', \'luna\'];\n\nconsole.log(\'Choose the coolest pet:\');\nprogram.choose(list, function(i){\n  console.log(\'you chose %d "%s"\', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
169 silly resolved     readmeFilename: 'Readme.md',
169 silly resolved     _id: 'commander@0.6.1',
169 silly resolved     _from: 'commander@0.6.1' },
169 silly resolved   { name: 'mkdirp',
169 silly resolved     description: 'Recursively mkdir, like `mkdir -p`',
169 silly resolved     version: '0.3.5',
169 silly resolved     author:
169 silly resolved      { name: 'James Halliday',
169 silly resolved        email: 'mail@substack.net',
169 silly resolved        url: 'http://substack.net' },
169 silly resolved     main: './index',
169 silly resolved     keywords: [ 'mkdir', 'directory' ],
169 silly resolved     repository:
169 silly resolved      { type: 'git',
169 silly resolved        url: 'http://github.com/substack/node-mkdirp.git' },
169 silly resolved     scripts: { test: 'tap test/*.js' },
169 silly resolved     devDependencies: { tap: '~0.4.0' },
169 silly resolved     license: 'MIT',
169 silly resolved     readme: '# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require(\'mkdirp\');\n    \nmkdirp(\'/tmp/foo/bar/baz\', function (err) {\n    if (err) console.error(err)\n    else console.log(\'pow!\')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require(\'mkdirp\');\n```\n\n## mkdirp(dir, mode, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\n## mkdirp.sync(dir, mode)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\n# license\n\nMIT\n',
169 silly resolved     readmeFilename: 'readme.markdown',
169 silly resolved     _id: 'mkdirp@0.3.5',
169 silly resolved     _from: 'mkdirp@0.3.x' } ]
170 info install commander@0.6.1 into /home/vagrant/app/node_modules/jade
171 info install mkdirp@0.3.5 into /home/vagrant/app/node_modules/jade
172 info installOne commander@0.6.1
173 info installOne mkdirp@0.3.5
174 verbose from cache /home/vagrant/.npm/mkdirp/0.3.5/package/package.json
175 info /home/vagrant/app/node_modules/jade/node_modules/mkdirp unbuild
176 verbose read json /home/vagrant/app/node_modules/jade/node_modules/mkdirp/package.json
177 verbose from cache /home/vagrant/.npm/commander/0.6.1/package/package.json
178 info /home/vagrant/app/node_modules/jade/node_modules/commander unbuild
179 verbose read json /home/vagrant/app/node_modules/jade/node_modules/commander/package.json
180 verbose tar unpack /home/vagrant/.npm/mkdirp/0.3.5/package.tgz
181 silly lockFile 27eb98d1-modules-jade-node-modules-mkdirp /home/vagrant/app/node_modules/jade/node_modules/mkdirp
182 verbose lock /home/vagrant/app/node_modules/jade/node_modules/mkdirp /home/vagrant/.npm/27eb98d1-modules-jade-node-modules-mkdirp.lock
183 silly lockFile e4fdc32c-ant-npm-mkdirp-0-3-5-package-tgz /home/vagrant/.npm/mkdirp/0.3.5/package.tgz
184 verbose lock /home/vagrant/.npm/mkdirp/0.3.5/package.tgz /home/vagrant/.npm/e4fdc32c-ant-npm-mkdirp-0-3-5-package-tgz.lock
185 verbose tar unpack /home/vagrant/.npm/commander/0.6.1/package.tgz
186 silly lockFile dd488459-ules-jade-node-modules-commander /home/vagrant/app/node_modules/jade/node_modules/commander
187 verbose lock /home/vagrant/app/node_modules/jade/node_modules/commander /home/vagrant/.npm/dd488459-ules-jade-node-modules-commander.lock
188 silly lockFile 5d986f5d--npm-commander-0-6-1-package-tgz /home/vagrant/.npm/commander/0.6.1/package.tgz
189 verbose lock /home/vagrant/.npm/commander/0.6.1/package.tgz /home/vagrant/.npm/5d986f5d--npm-commander-0-6-1-package-tgz.lock
190 silly gunzTarPerm modes [ '755', '644' ]
191 silly gunzTarPerm modes [ '755', '644' ]
192 silly gunzTarPerm extractEntry package.json
193 silly gunzTarPerm extractEntry package.json
194 silly gunzTarPerm extractEntry .npmignore
195 silly gunzTarPerm extractEntry LICENSE
196 silly gunzTarPerm extractEntry .npmignore
197 silly gunzTarPerm extractEntry index.js
198 silly gunzTarPerm extractEntry .travis.yml
199 silly gunzTarPerm extractEntry History.md
200 silly gunzTarPerm extractEntry index.js
201 silly gunzTarPerm extractEntry .travis.yml
202 silly gunzTarPerm extractEntry Makefile
203 silly gunzTarPerm extractEntry Readme.md
204 silly gunzTarPerm extractEntry examples/pow.js
205 silly gunzTarPerm extractEntry readme.markdown
206 silly gunzTarPerm extractEntry lib/commander.js
207 silly gunzTarPerm extractEntry test/chmod.js
208 silly gunzTarPerm extractEntry test/perm.js
209 silly gunzTarPerm extractEntry test/perm_sync.js
210 silly gunzTarPerm extractEntry test/race.js
211 silly gunzTarPerm extractEntry test/mkdirp.js
212 silly gunzTarPerm extractEntry test/return.js
213 silly gunzTarPerm extractEntry test/return_sync.js
214 silly gunzTarPerm extractEntry test/root.js
215 silly gunzTarPerm extractEntry test/sync.js
216 silly gunzTarPerm extractEntry test/umask.js
217 silly gunzTarPerm extractEntry test/clobber.js
218 silly gunzTarPerm extractEntry test/umask_sync.js
219 silly gunzTarPerm extractEntry test/rel.js
220 verbose read json /home/vagrant/app/node_modules/jade/node_modules/commander/package.json
221 silly lockFile dd488459-ules-jade-node-modules-commander /home/vagrant/app/node_modules/jade/node_modules/commander
222 silly lockFile dd488459-ules-jade-node-modules-commander /home/vagrant/app/node_modules/jade/node_modules/commander
223 silly lockFile 5d986f5d--npm-commander-0-6-1-package-tgz /home/vagrant/.npm/commander/0.6.1/package.tgz
224 silly lockFile 5d986f5d--npm-commander-0-6-1-package-tgz /home/vagrant/.npm/commander/0.6.1/package.tgz
225 info preinstall commander@0.6.1
226 verbose from cache /home/vagrant/app/node_modules/jade/node_modules/commander/package.json
227 verbose readDependencies using package.json deps
228 verbose from cache /home/vagrant/app/node_modules/jade/node_modules/commander/package.json
229 verbose readDependencies using package.json deps
230 silly resolved []
231 verbose about to build /home/vagrant/app/node_modules/jade/node_modules/commander
232 info build /home/vagrant/app/node_modules/jade/node_modules/commander
233 verbose from cache /home/vagrant/app/node_modules/jade/node_modules/commander/package.json
234 verbose linkStuff [ false,
234 verbose linkStuff   false,
234 verbose linkStuff   false,
234 verbose linkStuff   '/home/vagrant/app/node_modules/jade/node_modules' ]
235 info linkStuff commander@0.6.1
236 verbose linkBins commander@0.6.1
237 verbose linkMans commander@0.6.1
238 verbose rebuildBundles commander@0.6.1
239 info install commander@0.6.1
240 info postinstall commander@0.6.1
241 verbose read json /home/vagrant/app/node_modules/jade/node_modules/mkdirp/package.json
242 silly lockFile 27eb98d1-modules-jade-node-modules-mkdirp /home/vagrant/app/node_modules/jade/node_modules/mkdirp
243 silly lockFile 27eb98d1-modules-jade-node-modules-mkdirp /home/vagrant/app/node_modules/jade/node_modules/mkdirp
244 silly lockFile e4fdc32c-ant-npm-mkdirp-0-3-5-package-tgz /home/vagrant/.npm/mkdirp/0.3.5/package.tgz
245 silly lockFile e4fdc32c-ant-npm-mkdirp-0-3-5-package-tgz /home/vagrant/.npm/mkdirp/0.3.5/package.tgz
246 info preinstall mkdirp@0.3.5
247 verbose from cache /home/vagrant/app/node_modules/jade/node_modules/mkdirp/package.json
248 verbose readDependencies using package.json deps
249 verbose from cache /home/vagrant/app/node_modules/jade/node_modules/mkdirp/package.json
250 verbose readDependencies using package.json deps
251 silly resolved []
252 verbose about to build /home/vagrant/app/node_modules/jade/node_modules/mkdirp
253 info build /home/vagrant/app/node_modules/jade/node_modules/mkdirp
254 verbose from cache /home/vagrant/app/node_modules/jade/node_modules/mkdirp/package.json
255 verbose linkStuff [ false,
255 verbose linkStuff   false,
255 verbose linkStuff   false,
255 verbose linkStuff   '/home/vagrant/app/node_modules/jade/node_modules' ]
256 info linkStuff mkdirp@0.3.5
257 verbose linkBins mkdirp@0.3.5
258 verbose linkMans mkdirp@0.3.5
259 verbose rebuildBundles mkdirp@0.3.5
260 info install mkdirp@0.3.5
261 info postinstall mkdirp@0.3.5
262 verbose about to build /home/vagrant/app/node_modules/jade
263 info build /home/vagrant/app/node_modules/jade
264 verbose from cache /home/vagrant/app/node_modules/jade/package.json
265 verbose linkStuff [ false, false, false, '/home/vagrant/app/node_modules' ]
266 info linkStuff jade@0.28.2
267 verbose linkBins jade@0.28.2
268 verbose link bins [ { jade: './bin/jade' },
268 verbose link bins   '/home/vagrant/app/node_modules/.bin',
268 verbose link bins   false ]
269 verbose linkMans jade@0.28.2
270 verbose rebuildBundles jade@0.28.2
271 verbose rebuildBundles [ 'commander', 'mkdirp' ]
272 info /home/vagrant/app/node_modules/jade unbuild
273 verbose from cache /home/vagrant/app/node_modules/jade/package.json
274 info preuninstall jade@0.28.2
275 info uninstall jade@0.28.2
276 verbose true,/home/vagrant/app/node_modules,/home/vagrant/app/node_modules unbuild jade@0.28.2
277 verbose /home/vagrant/app/node_modules/.bin,[object Object] binRoot
278 info postuninstall jade@0.28.2
279 error Error: EROFS, symlink '../jade/bin/jade'
280 error If you need help, you may report this log at:
280 error     <http://github.com/isaacs/npm/issues>
280 error or email it to:
280 error     <npm-@googlegroups.com>
281 error System Linux 3.2.0-23-generic-pae
282 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install"
283 error cwd /home/vagrant/app
284 error node -v v0.10.0
285 error npm -v 1.2.14
286 error path ../jade/bin/jade
287 error code EROFS
288 error errno 56
289 verbose exit [ 56, true ]
